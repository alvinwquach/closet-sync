// This is your Prisma schema file,
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

// Generator for Prisma Client
generator client {
  provider = "prisma-client-js" // Generate Prisma Client
}

// Data source configuration
datasource db {
  provider = "postgresql" // Using PostgreSQL as the database
  url      = env("DATABASE_URL") // Database connection URL from environment variable
}

// Enum definitions
// User roles available in the application
enum Role {
  ADMIN // Admin user with elevated permissions
  MODERATOR // Moderator with limited administrative capabilities
  USER // Regular user
}

// Condition of products
enum Condition {
  BRAND_NEW // Product is brand new
  TRIED_ON // Product has been tried on but not used
  NEW_WITH_DEFECTS // New product with defects
  NEW_WITH_TAGS // New product still with tags
  NEW_WITHOUT_TAGS // New product without tags
  USED // Used product
  IN_BOX // Product is in its original box
  NO_BOX // Product is without its box
}

// Types of raffles available
enum RaffleType {
  IN_APP // Raffle can be entered within the app
  ONLINE // Raffle can be entered online
  IN_STORE // Raffle can be entered in physical stores
}

// Possible statuses of a raffle
enum RaffleStatus {
  OPEN // Raffle is currently open for entries
  CLOSED // Raffle has closed and is no longer accepting entries
  CANCELED // Raffle has been canceled
}

// User model definition
model User {
  id              Int            @id @default(autoincrement()) // Unique ID for the user
  email           String         @unique // User's unique email for login
  password        String         // User's password
  role            Role           @default(USER) // Default user role assigned

  // Relationships
  products        Product[]      // User's listed products
  favorites       Product[]      @relation("Favorites") // Products favorited by the user
  viewedProducts  Product[]      @relation("ViewedProducts") // Products viewed by the user
  searchHistory   SearchHistory[] // User's search history
  enteredRaffles  RaffleEntry[]  // Raffles the user has entered
  createdAt       DateTime       @default(now()) // Timestamp of user creation
}

// Media model for storing product images/videos
model Media {
  id        Int      @id @default(autoincrement()) // Unique ID for media
  url       String   // URL of the media file

  // Foreign Key linking to Product
  productId Int    // Product ID that this media belongs to
  product   Product @relation(fields: [productId], references: [id]) // Relationship to Product
}

// Size model for product sizes
model Size {
  id        Int      @id @default(autoincrement()) // Unique ID for size
  size      String   // Size value (e.g., "8", "9", "10")

  // Many-to-Many relationship with Product
  products  Product[] @relation("ProductSizes") // Products that include this size
}

// Product model definition
model Product {
  id              Int            @id @default(autoincrement()) // Unique ID for product
  title           String         // Title of the product
  description     String         // Detailed description
  price           Float          // Price of the product
  size            String         // Size of the product
  condition       Condition      // Condition of the product
  createdAt       DateTime       @default(now()) // Creation timestamp
  listedAt        DateTime       // Timestamp for when the product was listed
  soldAt          DateTime?      // Optional timestamp for when the product was sold
  releaseDate     DateTime?      // Optional release date for the product

  // Foreign Key linking to User
  sellerId        Int            // User ID of the seller
  seller          User           @relation(fields: [sellerId], references: [id]) // Seller relationship

  // Relationships
  favoritedBy     User[]         @relation("Favorites") // Users who favorited this product
  viewedBy        User[]         @relation("ViewedProducts") // Users who viewed this product
  priceHistory    PriceHistory[]  // Price history for the product
  hasRaffle       Boolean        @default(false) // Indicates if a raffle is associated
  raffles         Raffle[]       @relation // Raffles associated with the product

  // Media files related to the product
  media           Media[]        // Multiple media files for the product

  // Optional Foreign Key for Country
  countryId       Int?           // Country ID (if applicable)
  country         Country?       @relation(fields: [countryId], references: [id]) // Relationship to Country

  // Many-to-Many relationship with Size
  sizes           Size[]         @relation("ProductSizes") // Sizes associated with this product
}

// PriceHistory model for tracking product price changes
model PriceHistory {
  id              Int            @id @default(autoincrement()) // Unique ID for price history entry

  // Foreign Key linking to Product
  productId       Int            // Product ID that this price history entry belongs to
  price           Float          // Recorded price
  recordedAt      DateTime       @default(now()) // Timestamp for when the price was recorded

  // Relationship to Product
  product         Product        @relation(fields: [productId], references: [id]) // Link to Product
}

// SearchHistory model for tracking user search terms
model SearchHistory {
  id              Int            @id @default(autoincrement()) // Unique ID for search history entry

  // Foreign Key linking to User
  userId          Int            // User ID that this search term belongs to
  searchTerm      String         // The search term entered by the user
  user            User           @relation(fields: [userId], references: [id]) // Link to User
  createdAt       DateTime       @default(now()) // Timestamp of the search
}

// Raffle model definition for raffles linked to products
model Raffle {
  id              Int            @id @default(autoincrement()) // Unique ID for raffle
  productId       Int            // Product ID associated with the raffle
  closingTime     DateTime       // Time when the raffle closes
  releaseDate     DateTime       // Release date for the raffle
  type            RaffleType     // Type of the raffle
  link            String?        // Link for online or in-store raffles (optional)

  // Relationship to Product
  product         Product        @relation(fields: [productId], references: [id]) // Link to Product

  // Relationship to RaffleEntry
  entries         RaffleEntry[]  @relation("RaffleEntries") // Entries in the raffle
  status          RaffleStatus    // Current status of the raffle
}

// RaffleEntry model to track user entries in raffles
model RaffleEntry {
  id              Int            @id @default(autoincrement()) // Unique ID for raffle entry

  // Foreign Keys linking to User and Raffle
  userId          Int            // User ID of the entrant
  raffleId        Int            // Raffle ID that this entry is for

  user            User           @relation(fields: [userId], references: [id]) // Link to User
  raffle          Raffle         @relation("RaffleEntries", fields: [raffleId], references: [id]) // Link to Raffle
  enteredAt       DateTime       @default(now()) // Timestamp when the user entered the raffle
}

// Country model to represent countries
model Country {
  id              Int            @id @default(autoincrement()) // Unique ID for country
  name            String         @unique // Unique name of the country
  products        Product[]      // Products available in this country
}
